<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Word;

class TelegramBotController extends Controller
{
    public function webhook(Request $request)
    {
        $data = $request->all();

        if (!isset($data['message'])) {
            return response('No message found', 200);
        }

        $message = $data['message'];
        $chatId = $message['chat']['id'];
        $text = trim($message['text'] ?? '');

        // –ö–æ–º–∞–Ω–¥–∞ /start
        if ($text === '/start') {
            $keyboard = [
                [['text' => '‚ûï –î–æ–¥–∞—Ç–∏ —Å–ª–æ–≤–æ']],
                [['text' => 'üìÉ –ú–æ—ó —Å–ª–æ–≤–∞']],
            ];

            $this->sendTelegramMessage(
                $chatId,
                "üëã –í—ñ—Ç–∞—é! –ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Å–ª–æ–≤–æ —É —Ñ–æ—Ä–º–∞—Ç—ñ:\n<code>apple - —è–±–ª—É–∫–æ</code>\n–ê–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂—á–µ:",
                $keyboard
            );
            return response('OK', 200);
        }

        // –ö–Ω–æ–ø–∫–∞ "–ú–æ—ó —Å–ª–æ–≤–∞"
        if ($text === 'üìÉ –ú–æ—ó —Å–ª–æ–≤–∞' || $text === '/mywords') {
            $words = Word::where('user_id', $chatId)->get();

            if ($words->isEmpty()) {
                $this->sendTelegramMessage($chatId, "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö —Å–ª—ñ–≤.");
            } else {
                $message = "üìö –í–∞—à—ñ —Å–ª–æ–≤–∞:\n\n";
                foreach ($words as $word) {
                    $message .= "üîπ <b>{$word->word}</b> ‚Äî {$word->translation}\n";
                }
                $this->sendTelegramMessage($chatId, $message);
            }

            return response('OK', 200);
        }

        // –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ —Å–ª–æ–≤–æ"
        if ($text === '‚ûï –î–æ–¥–∞—Ç–∏ —Å–ª–æ–≤–æ' || $text === '/addnewword') {
            $this->sendTelegramMessage($chatId, "‚úçÔ∏è –ù–∞–¥—ñ—à–ª—ñ—Ç—å –º–µ–Ω—ñ —Å–ª–æ–≤–æ —É —Ñ–æ—Ä–º–∞—Ç—ñ:\n<code>apple - —è–±–ª—É–∫–æ</code>");
            return response('OK', 200);
        }

        // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ª–æ–≤–∞ (word - translation)
        if (str_contains($text, '-')) {
            [$word, $translation] = array_map('trim', explode('-', $text, 2));

            if (!empty($word) && !empty($translation)) {
                Word::create([
                    'user_id' => $chatId,
                    'word' => $word,
                    'translation' => $translation,
                ]);

                $this->sendTelegramMessage($chatId, "‚úÖ –î–æ–¥–∞–Ω–æ: <b>{$word}</b> ‚Äî {$translation}");
            } else {
                $this->sendTelegramMessage($chatId, "‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–∫–ª–∞–¥:\n<code>apple - —è–±–ª—É–∫–æ</code>");
            }

            return response('OK', 200);
        }

        // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        $this->sendTelegramMessage($chatId, "‚ùó –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Å–ª–æ–≤–æ —É —Ñ–æ—Ä–º–∞—Ç—ñ:\n<code>—Å–ª–æ–≤–æ - –ø–µ—Ä–µ–∫–ª–∞–¥</code>");
        return response('OK', 200);
    }

    private function sendTelegramMessage($chatId, $text, $keyboard = null)
    {
        $token = env('TELEGRAM_BOT_TOKEN');
        $url = "https://api.telegram.org/bot{$token}/sendMessage";

        $postData = [
            'chat_id' => $chatId,
            'text' => $text,
            'parse_mode' => 'HTML',
        ];

        if ($keyboard) {
            $postData['reply_markup'] = json_encode([
                'keyboard' => $keyboard,
                'resize_keyboard' => true,
                'one_time_keyboard' => false,
            ]);
        }

        file_get_contents($url . '?' . http_build_query($postData));
    }
}
